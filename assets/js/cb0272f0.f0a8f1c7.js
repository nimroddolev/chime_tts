"use strict";(self.webpackChunkchime_tts=self.webpackChunkchime_tts||[]).push([[4983],{1380:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"documentation/notify/adding","title":"1. Adding Notify Entires","description":"1. Open your Home Assistant configuration.yaml file.","source":"@site/docs/documentation/notify/adding.mdx","sourceDirName":"documentation/notify","slug":"/documentation/notify/adding","permalink":"/chime_tts/docs/documentation/notify/adding","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"1. Adding Notify Entires"},"sidebar":"tutorialSidebar","previous":{"title":"Notify","permalink":"/chime_tts/docs/documentation/notify/"},"next":{"title":"2. Sending Notifications","permalink":"/chime_tts/docs/documentation/notify/sending"}}');var o=t(4848),r=t(8453);t(6025);const s={sidebar_position:1,title:"1. Adding Notify Entires"},a="Adding Chime TTS Notify Entries",d={},c=[{value:"Basic Chime TTS notify entry",id:"basic-chime-tts-notify-entry",level:3},{value:"Advanced Chime TTS notify entry",id:"advanced-chime-tts-notify-entry",level:3}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"adding-chime-tts-notify-entries",children:"Adding Chime TTS Notify Entries"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Open your Home Assistant ",(0,o.jsx)(n.code,{children:"configuration.yaml"})," file."]}),"\n",(0,o.jsxs)(n.li,{children:["Locate or add the ",(0,o.jsx)(n.code,{children:"notify"})," section within your configuration."]}),"\n",(0,o.jsx)(n.li,{children:"Add 1 or more notify entires (see the example below)."}),"\n",(0,o.jsxs)(n.li,{children:["Include any ",(0,o.jsx)(n.a,{href:"/chime_tts/docs/documentation/actions/say-action",children:(0,o.jsx)(n.code,{children:"chime_tts.say"})})," ",(0,o.jsx)(n.a,{href:"/chime_tts/docs/documentation/actions/say-action/parameters",children:"parameters"})," and set the default values."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"basic-chime-tts-notify-entry",children:"Basic Chime TTS notify entry"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"configuration.yaml"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"notify:\n  - name: announcements  # (required) Choose a recognizable name for your notify entry\n    platform: chime_tts # (required)\n    entity_id:  # (required) List of media players for notifications\n      - media_player.kitchen\n      - media_player.office\n    chime_path: soft\n    tts_platform: cloud\n    language: en-AU\n"})}),"\n",(0,o.jsx)(n.h3,{id:"advanced-chime-tts-notify-entry",children:"Advanced Chime TTS notify entry"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"configuration.yaml"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"notify:\n  - name: reminder\n    platform: chime_tts\n    chime_path: whistle\n    entity_id:\n      - media_player.kitchen\n      - media_player.living_room\n      - media_player.study\n      - media_player.bedroom\n      - media_player.spotify\n    tts_platform: cloud\n    language: en-AU\n    voice: TinaNeural\n    volume_level: 1\n    announce: true\n    join_players: true\n    unjoin_players: true\n"})})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(6540);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);